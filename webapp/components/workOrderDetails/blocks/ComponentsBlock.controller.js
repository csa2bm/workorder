sap.ui.define([	"com/twobm/mobileworkorder/util/Controller"], function(Controller) {	"use strict";	return Controller.extend("com.twobm.mobileworkorder.components.workOrderDetails.blocks.ComponentsBlock", {		onInit: function() {			this.createMaterialSelectionPopover();		},		createMaterialSelectionPopover: function() {			if (!this._oPopover) {				this._oPopover = sap.ui.xmlfragment("ComponentMaterialSelectPopUp",					"com.twobm.mobileworkorder.components.workOrderDetails.fragments.AddComponentView", this);				this._oPopover.setModel(this.getView().getModel());				this._oPopover.attachBeforeClose(function() {					// If we started creating a new entry..					if (this.getView().getModel("ComponentDetailsModel").getData().IsCreate && this.newEntry) {						// ..make sure it is removed from the model if the user cancels						this.getView().getModel().deleteCreatedEntry(this.newEntry);						this.newEntry = null;					}					else					{						if (this.newEntry)							this.getView().getModel().resetChanges([this.newEntry.getPath()]);					}					// Make sure that the dialog starts in the initial screen					this.onNavBackMaterialSelectPopUp();				}.bind(this));				this.getView().addDependent(this._oPopover);			}		},		addMaterial: function(oEvent) {			this._oPopover.open();		},		onProductSelectedFromSearchResult: function(oEvent) {			var selectedItem = this.getView().getModel().getProperty(oEvent.getSource().getBindingContext().getPath());			var componentDetailsModel = new sap.ui.model.json.JSONModel({				SelectedMaterial: selectedItem,				SelectedMaterialBindingPath: oEvent.getSource().getBindingContext().getPath(),				IsCreate: false			});			componentDetailsModel.setDefaultBindingMode(sap.ui.model.BindingMode.TwoWay);			this.getView().setModel(componentDetailsModel, "ComponentDetailsModel");			var oNavCon = sap.ui.core.Fragment.byId("ComponentMaterialSelectPopUp", "navCon");			var oDetailPage = sap.ui.core.Fragment.byId("ComponentMaterialSelectPopUp", "detail");			var path = this.getView().getBindingContext().getPath() + "/OrderComponent";			// Create new entry with default values			this.newEntry = this.getView().getModel().createEntry(path, {				properties: {					ReqQuantity: "1",					Material: selectedItem.Matnr				}			});			// Bind new item to popover			this._oPopover.setBindingContext(this.newEntry);			oNavCon.to(oDetailPage);		},		onOK: function(oEvent) {			this.getView().getModel().submitChanges({				success: function(response) {					for (var i = 0; i < response.__batchResponses.length; i++) {						var oResponse = response.__batchResponses[i].response;						if (typeof oResponse !== "undefined" && oResponse.statusCode !== "200") {							this.errorCallBackShowInPopUp(oResponse);							this._oPopover.setBusy(false);							return;						}					}					// Reset view busy					this._oPopover.setBusy(false);					// If we just created a new entity, clear the reference to it					if (this.newEntry) {						this.newEntry = null;					}					// Reset navigation					this.onNavBackMaterialSelectPopUp();					// Close the popup					this._oPopover.close();				}.bind(this),				error: function(error) {					// Reset view busy					this._oPopover.setBusy(false);					// Show error to user					this.errorCallBackShowInPopUp(error);				}.bind(this)			});		},		onClose: function() {						this._oPopover.close();		},				onDelete: function() {			// Set view busy			this._oPopover.setBusy(true);			// Delete from model			this.getView().getModel().remove(this._oPopover.getBindingContext().getPath(), {				success: function() {					this.newEntry = null;					// Reset view busy					this._oPopover.setBusy(false);					// Close the popup					this._oPopover.close();				}.bind(this),				error: function(error) {					// Reset view busy					this._oPopover.setBusy(false);					// Show error to user					this.errorCallBackShowInPopUp(error);				}.bind(this)			});		},		onNavBackMaterialSelectPopUp: function(oEvent) {			var oNavCon = sap.ui.core.Fragment.byId("ComponentMaterialSelectPopUp", "navCon");			oNavCon.back();		},		orderStatusValid: function(str) {			var oContext = this.getView().getBindingContext();			var model = this.getView().getModel();			return !this.readOnly(oContext, model);		},		formatMaterialImageUrl: function(matnr) {			if (matnr)				return this.getView().getModel().sServiceUrl + this.getView().getModel("ComponentDetailsModel").getProperty("/").SelectedMaterialBindingPath +					"/$value";			else				return "";		},		onIncreaseQuantity: function() {			var quantity = Number(this.getView().getModel().getProperty(this.newEntry.getPath() + "/ReqQuantity"));			quantity++;			this.getView().getModel().setProperty(this.newEntry.getPath() + "/ReqQuantity", quantity.toString());		},		onDecreaseQuantity: function() {			var quantity = Number(this.getView().getModel().getProperty(this.newEntry.getPath() + "/ReqQuantity"));			quantity--;			//make sure that we cannot decrease to negative number			if (quantity < 1) {				return;			}			this.getView().getModel().setProperty(this.newEntry.getPath() + "/ReqQuantity", quantity.toString());		},		onEdit: function(oEvent) {			var selectedItem = this.getView().getModel().getProperty(oEvent.getSource().getBindingContext().getPath());			var selectedItemBindingContext = oEvent.getSource().getBindingContext();			var path = "/MaterialsSet('" + selectedItem.Material + "')";			this.getView().getModel().read(path, {				success: function(result) {					// Fint material					var selectedMaterial = this.getView().getModel().getProperty("/MaterialsSet('" + selectedItem.Material + "')");					// Create and bind view model					var componentDetailsModel = new sap.ui.model.json.JSONModel({						SelectedMaterial: result,						SelectedMaterialBindingPath: path,						IsCreate: false					});					componentDetailsModel.setDefaultBindingMode(sap.ui.model.BindingMode.TwoWay);					this.getView().setModel(componentDetailsModel, "ComponentDetailsModel");					// Set binding to selected item					this.newEntry = selectedItemBindingContext;					this._oPopover.setBindingContext(this.newEntry);					// Navigate popover so it starts on the details screen					var oNavCon = sap.ui.core.Fragment.byId("ComponentMaterialSelectPopUp", "navCon");					var oDetailPage = sap.ui.core.Fragment.byId("ComponentMaterialSelectPopUp", "detail");					oNavCon.to(oDetailPage);					this._oPopover.open();				}.bind(this)			});		}	});});