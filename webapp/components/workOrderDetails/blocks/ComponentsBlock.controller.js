sap.ui.define([	"com/twobm/mobileworkorder/util/Controller"], function(Controller) {	"use strict";	return Controller.extend("com.twobm.mobileworkorder.components.workOrderDetails.blocks.ComponentsBlock", {		onInit: function() {			this.createMaterialSelectionPopover();		},		createMaterialSelectionPopover: function() {			if (!this._oPopover) {				this._oPopover = sap.ui.xmlfragment("ComponentMaterialSelectPopUp",					"com.twobm.mobileworkorder.components.workOrderDetails.fragments.AddComponentView", this);				this._oPopover.setModel(this.getView().getModel());				this._oPopover.attachBeforeClose(function() {					if (this.newEntry) {						// If we started creating a new entry..						if (this.newEntry) {							// ..make sure it is removed from the model if the user cancels							this.getView().getModel().deleteCreatedEntry(this.newEntry);							this.newEntry = null;						}					}				});				this.getView().addDependent(this._oPopover);			}		},		addMaterial: function(oEvent) {			this._oPopover.open();		},		onProductSelectedFromSearchResult: function(oEvent) {			var selectedItem = this.getView().getModel().getProperty(oEvent.getSource().getBindingContext().getPath());			var componentDetailsModel = new sap.ui.model.json.JSONModel({				SelectedMaterial: selectedItem,				SelectedMaterialBindingPath:  oEvent.getSource().getBindingContext().getPath()			});			componentDetailsModel.setDefaultBindingMode(sap.ui.model.BindingMode.TwoWay);			this.getView().setModel(componentDetailsModel, "ComponentDetailsModel");			var oNavCon = sap.ui.core.Fragment.byId("ComponentMaterialSelectPopUp", "navCon");			var oDetailPage = sap.ui.core.Fragment.byId("ComponentMaterialSelectPopUp", "detail");			var path = this.getView().getBindingContext().getPath() + "/OrderComponent";			// Create new entry with default values			this.newEntry = this.getView().getModel().createEntry(path, {				properties: {					ReqQuantity: "5",					Material: selectedItem.Matnr				}			});			// Bind new item to popover			this._oPopover.setBindingContext(this.newEntry);			oNavCon.to(oDetailPage);		},		onOK: function(oEvent) {			this.getView().getModel().submitChanges({				success: function() {					// Reset view busy					this._oPopover.setBusy(false);					// If we just created a new entity, clear the reference to it					if (this.newEntry) {						this.newEntry = null;					}					// Close the popup					this._oPopover.close();				}.bind(this),				error: function(error) {					// Reset view busy					this._oPopover.setBusy(false);					// Show error to user					self.errorCallBackShowInPopUp(error);				}.bind(this)			});		},				onClose : function() {			this.onNavBackMaterialSelectPopUp();			this._oPopover.close();		},		onNavBackMaterialSelectPopUp: function(oEvent) {			var oNavCon = sap.ui.core.Fragment.byId("ComponentMaterialSelectPopUp", "navCon");			oNavCon.back();		},		orderStatusValid: function(str) {			var oContext = this.getView().getBindingContext();			var model = this.getView().getModel();			return !this.readOnly(oContext, model);		},				formatMaterialImageUrl: function(matnr){			if (matnr)			return this.getView().getModel().sServiceUrl + this.getView().getModel("ComponentDetailsModel").getProperty("/").SelectedMaterialBindingPath + "/$value";			else			return "";		}	});});