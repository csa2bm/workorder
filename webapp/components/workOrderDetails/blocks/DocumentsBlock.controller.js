sap.ui.define([	"com/twobm/mobileworkorder/util/Controller",	"sap/ui/model/json/JSONModel"], function(Controller, JSONModel) {	"use strict";	return Controller.extend("com.twobm.mobileworkorder.components.workOrderDetails.blocks.DocumentsBlock", {		onInit: function() {},		formatDateTimeShort: function(oValue) {			var dateFormat = sap.ui.core.format.DateFormat.getDateInstance({				pattern: "dd/MM/yyyy"			});			if (oValue) {				// timezoneOffset is in hours convert to milliseconds  				var TZOffsetMs = new Date(0).getTimezoneOffset() * 60 * 1000;				return dateFormat.format(new Date(oValue.getTime() + TZOffsetMs)); //05-12-2012  			} else {				return "";			}		},		downloadDocument: function(oEvent) {			var currentObject = oEvent.getSource().getBindingContext().getObject();			var fileUrl = currentObject.__metadata.media_src;			var fileTransfer = new FileTransfer();			var uri = encodeURI(fileUrl);			fileTransfer.download(				uri,				cordova.file.documentsDirectory + currentObject.Filename,				function(entry) {					console.log("download complete: " + entry.toURL());				},				function(error) {					console.log("download error source " + error.source);					console.log("download error target " + error.target);					console.log("download error code" + error.code);				},				false, {}			);		},		viewDocument: function(oEvent){			var currentObject = oEvent.getSource().getBindingContext().getObject();			var isHybridApp = this.getView().getModel("device").getData().isHybridApp;			if(isHybridApp){				window.open(cordova.file.documentsDirectory + currentObject.Filename);			}			else{				var fileUrl = currentObject.__metadata.media_src;				window.open(fileUrl);			}											}	});});